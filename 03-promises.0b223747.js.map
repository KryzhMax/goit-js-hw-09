{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAIMC,EAAO,CACXC,QAASC,SAASC,cAAc,SAChCC,SAAUF,SAASC,cAAc,kBACjCE,QAASH,SAASC,cAAc,iBAChCG,UAAWJ,SAASC,cAAc,oBAGnBI,EAAiCP,EAAjCI,SAAUI,EAAuBR,EAAvBK,QAASI,EAAcT,EAAdM,UAqBpC,SAASI,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IA9B2CZ,EAA1CC,QAoCAmB,iBAAiB,UAjCzB,SAAmBC,GACjBA,EAAMC,iBAIN,IAFA,IAAIC,EAAQC,OAAOjB,EAASkB,OACxBC,EAAOF,OAAOhB,EAAQiB,OACjBE,EAAI,EAAGA,GAAKlB,EAAUgB,MAAOE,IACpCjB,EAAciB,EAAGJ,GACdK,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBd,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9DqB,OAAM,SAAAJ,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBd,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAE9DW,GAASG,EAEXL,EAAMc,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n// References\n\nconst refs = {\n  formRef: document.querySelector('.form'),\n  delayRef: document.querySelector('[name=\"delay\"]'),\n  stepRef: document.querySelector('[name=\"step\"]'),\n  amountRef: document.querySelector('[name=\"amount\"]'),\n};\n\nconst { formRef, delayRef, stepRef, amountRef } = refs;\n\n// Functions\nfunction addAmount(event) {\n  event.preventDefault();\n\n  let DELAY = Number(delayRef.value);\n  let STEP = Number(stepRef.value);\n  for (let i = 1; i <= amountRef.value; i++) {\n    createPromise(i, DELAY)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    DELAY += STEP;\n  }\n  event.currentTarget.reset();\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n// Listeners\n\nformRef.addEventListener('submit', addAmount);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","formRef","document","querySelector","delayRef","stepRef","amountRef","$ce04d3a99e08e73b$var$delayRef","$ce04d3a99e08e73b$var$stepRef","$ce04d3a99e08e73b$var$amountRef","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","DELAY","Number","value","STEP","i","then","param","Notify","success","concat","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.0b223747.js.map"}